{"mappings":"AAAA,MAAMA,EAAO,CACXC,SAAU,gCACVC,SAAU,qBACVC,OAAQ,mCACRC,IAAK,mCACLC,YAAa,EACbC,KAAMC,SAASC,cAAc,YAC/BC,OAAQF,SAASC,cAAc,aAC/BE,QAAS,GAyBoBV,EAAKI,IASlC,MAAMO,EAASJ,SAASC,cAAc,aACtC,IAAII,EAAW,IAAIC,sBAEnB,SAAkBC,EAASC,GACvBD,EAAQE,SAASC,IAnCrB,IAAgBC,EAoCJD,EAAME,iBACNC,QAAQC,IAAI,KAAMJ,EAAME,gBArCpBD,EAsCGH,EArCjBf,EAAKK,cACLiB,EAAWtB,EAAKK,aACbkB,MAAKC,IACJxB,EAAKM,KAAKmB,mBAAmB,YAAaC,EAAaF,EAAKG,UACxDH,EAAKI,OAASJ,EAAKK,aACnBX,EAASY,WAAWnB,EAAO,IAGhCoB,OAAMC,GAAOZ,QAAQa,OAAOD,K,MAiBlB,CACXE,KAAM,KACNC,WAAY,QACZC,UAAW,IAgBf,SAASd,EAAWM,EAAO,GACzB,MAAMS,EAAQ,IAAIC,gBAAgB,CAEhCV,KAAMA,IAER,OAAOW,MACL,GAAGvC,EAAKC,WAAWD,EAAKE,oBAAoBF,EAAKI,OAAOiC,KACxDd,MAAKiB,IACL,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,MAAM,G,CAatB,SAASlB,EAAamB,GACpB,OAAOA,EACJC,KACC,EAACC,YAAEA,EAAWC,MAAEA,EAAKC,SAAEA,KACrB,wCACYjD,EAAKG,SAAS4C,WAAqBC,+BACzCA,uCACgBC,6BAGzBC,KAAK,G,CApBV5B,IACGC,MAAKC,IACFxB,EAAKM,KAAKmB,mBAAmB,YAAaC,EAAaF,EAAKG,UACpDf,EAASuC,QAAQxC,GACvBa,EAAKI,MAAQJ,EAAKK,cACpB7B,EAAKoD,YAAYC,QAAS,EAAK,IAGlCtB,OAAMC,GAAOZ,QAAQa,OAAOD","sources":["src/js/05-observer.js"],"sourcesContent":["const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  ENDPOINT: 'trending/movie/day',\n  IMGURL: 'https://image.tmdb.org/t/p/w300/',\n  KEY: '708f0b64505f12eb8c20b5a01361fdf3',\n  currentPage: 1,\n  list: document.querySelector('.js-list'),\ntarget: document.querySelector('.js-guard'),\ncounter: 0,\n};\n\nfunction onLoad(observer) {\n  refs.currentPage++;\n  getTrandig(refs.currentPage)\n    .then(data => {\n      refs.list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n      if (data.page === data.total_pages) {\n          observer.unobserver(target);\n      }\n    })\n    .catch(err => console.assert(err));\n}\n\nconst options = {\n  headers: {\n    Authorization: 'Bearer 708f0b64505f12eb8c20b5a01361fdf3',\n  },\n};\n\nconst option = {\n  method: 'GET',\n\n  headers: {\n    Authorization: `Bearer ${refs.KEY}`,\n  },\n};\n\nlet options2 = {\n    root: null,\n    rootMargin: \"100px\",\n    threshold: 1.0,\n};\nconst target = document.querySelector('.js-guard');\nlet observer = new IntersectionObserver(callback, options2);\n\nfunction callback(entries, observer) {\n    entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n            console.log(\"e2\", entry.isIntersecting)\n            onLoad(observer);\n        }\n})\n}\n\n\n\nfunction getTrandig(page = 1) {\n  const param = new URLSearchParams({\n    //     limit: 30,\n    page: page,\n  });\n  return fetch(\n    `${refs.BASE_URL}${refs.ENDPOINT}?api_key=${refs.KEY}&${param}`\n  ).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n}\ngetTrandig()\n  .then(data => {\n      refs.list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n              observer.observe(target);\n    if (data.page != data.total_pages) {\n      refs.btnLoadMore.hidden = false;\n    }\n  })\n  .catch(err => console.assert(err));\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title, overview }) =>\n        `<li class=\"card\">\n        <img src=\"${refs.IMGURL}${poster_path}\" alt=\"${title} class=\"img\">\n        <h2>${title}</h2>\n        <p class=\"overview\">${overview}</p>\n            </li>`\n    )\n    .join('');\n}"],"names":["$28bb3ea5a6257e62$var$refs","BASE_URL","ENDPOINT","IMGURL","KEY","currentPage","list","document","querySelector","target","counter","$28bb3ea5a6257e62$var$target","$28bb3ea5a6257e62$var$observer","IntersectionObserver","entries","observer2","forEach","entry","observer1","isIntersecting","console","log","$28bb3ea5a6257e62$var$getTrandig","then","data","insertAdjacentHTML","$28bb3ea5a6257e62$var$createMarkup","results","page","total_pages","unobserver","catch","err","assert","root","rootMargin","threshold","param","URLSearchParams","fetch","resp","ok","Error","statusText","json","arr","map","poster_path","title","overview","join","observe","btnLoadMore","hidden"],"version":3,"file":"05-observer.3c382485.js.map"}