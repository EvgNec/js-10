{"mappings":"AAGAA,MAAM,gDACHC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKE,GAAQC,QAAQC,IAAIF,KAK5BH,MAAM,6CAA8C,CAClDM,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,MACPH,KAAM,MACNI,OAAQ,IAEVC,QAAS,CACP,eAAgB,qCAGjBX,MAAKC,GAAYA,EAASC,SAC1BF,MAAKE,GAAQC,QAAQC,IAAIF,KAG5B,MAAMU,EAAU,CACdP,OAAQ,OACRM,QAAS,CACP,eAAgB,mCAElBL,KAAMC,KAAKC,UAAU,CACnBC,MAAO,OACPH,KAAM,YACNI,OAAQ,KAGZX,MAAM,6CAA8Ca,GACjDZ,MAAKC,IACJ,IAAKA,EAASY,GACZ,MAAM,IAAIC,MAAMb,EAASc,YAE3B,OAAOd,EAASC,MAAM,IAEvBF,MAAKE,GAAQC,QAAQC,IAAIF,KACzBc,OAAMC,GAAKd,QAAQC,IAAIa,KAE1B,MAAMC,EAAO,CACXC,cAAeC,SAASC,cAAc,WACtCC,QAASF,SAASC,cAAc,aAC9BE,YAAaH,SAASC,cAAc,YACpCG,aAAcJ,SAASC,cAAc,cAiBzC,SAASI,EAAkBC,GACzBA,EAAIC,iBACJ,MAAMlB,MAAEA,EAAKH,KAAEA,GAASoB,EAAIE,cAAcC,SACpCC,EAAO,CACXrB,MAAOA,EAAMsB,MACbzB,KAAMA,EAAKyB,OAEb5B,QAAQC,IAAI,iCAAiC0B,GAkB/C,SAAwBA,GACtB,MAAME,EAAU,CACd3B,OAAQ,OACRM,QAAS,CACP,eAAgB,mCAElBL,KAAMC,KAAKC,UAAUsB,IAErB,OAAO/B,MAAM,8CAA+CiC,GACvDhC,MAAKC,IACF,IAAKA,EAASY,GACV,MAAM,IAAIC,MAAMb,EAASc,YAE7B,OAAOd,EAASC,MAAM,G,CA7B9B+B,CAAeH,GAAM9B,MAAKkC,IACtBhB,EAAKI,QAAQa,mBAAmB,YAQxC,UAA0BC,GAAEA,EAAE3B,MAAEA,EAAKH,KAAEA,IACrC,MAAO,gBAAgB8B,gBACf3B,qBACEH,iB,CAXyC+B,CAAiBH,GAAK,IAElElB,OAAM,KACHE,EAAKM,aAAac,UAAY,iBAAiB,IAElDC,SAAQ,IAAOrB,EAAKK,YAAYe,UAAY,I,CA5BrDpB,EAAKC,cAAcqB,iBAAiB,SAEpC,WACEtB,EAAKK,YAAYe,UAAY,sLAMhBlB,SAASC,cAAc,gBAC/BmB,iBAAiB,SAAUf,E","sources":["src/js/11-crud.js"],"sourcesContent":["//CRUD\n\n//R - GET\nfetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(json => console.log(json));\n\n//C - POST\n\n// 1\nfetch('https://jsonplaceholder.typicode.com/posts', {\n  method: 'POST',\n  body: JSON.stringify({\n    title: 'foo',\n    body: 'bar',\n    userId: 1,\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n  .then(response => response.json())\n  .then(json => console.log(json));\n\n// 2\nconst options = {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    title: 'test',\n    body: 'test test',\n    userId: 1,\n  }),\n};\nfetch('https://jsonplaceholder.typicode.com/posts', options)\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  })\n  .then(json => console.log(json))\n  .catch(e => console.log(e));\n\nconst refs = {\n  btnAddComment: document.querySelector('.js-add'),\n  listCat: document.querySelector('.js-posts'),\n    formWrapper: document.querySelector('.js-form'),\n    errorMessage: document.querySelector('.js-error'),\n  \n};\n\nrefs.btnAddComment.addEventListener('click', handlerAddPost);\n\nfunction handlerAddPost() {\n  refs.formWrapper.innerHTML = `<form action=\"submit\" class=\"js-form-add\">\n    <input type=\"text\" name=\"title\">\n    <textarea name=\"body\" cols=\"30\" rows=\"10\"></textarea>\n    <button>Add post</button>\n</form>`;\n\n  const form = document.querySelector('.js-form-add');\n  form.addEventListener('submit', handlerFormSubmit);\n}\n\nfunction handlerFormSubmit(evt) {\n  evt.preventDefault();\n  const { title, body } = evt.currentTarget.elements;\n  const data = {\n    title: title.value,\n    body: body.value,\n  };\n  console.log('ðŸš€ ~ handlerFormSubmit ~ data:', data);\n\n    addPostService(data).then(obj => {\n        refs.listCat.insertAdjacentHTML('beforeend', createPostMarkup(obj))\n    })\n        .catch(() => {\n            refs.errorMessage.innerHTML = \"Can't add posts\";\n        })\n        .finally(() => (refs.formWrapper.innerHTML = \"\"));\n}\n\nfunction createPostMarkup({ id, title, body }) {\n  return `<li data-id=\"${id}\">\n    <h2>${title}</h2>\n    <span>${body}</span>\n</li>`;\n}\n\nfunction addPostService(data) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  };\n    return fetch('https://1jsonplaceholder.typicode.com/posts', options)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.statusText);\n            }\n            return response.json();\n        });\n}\n"],"names":["fetch","then","response","json","console","log","method","body","JSON","stringify","title","userId","headers","$70f690b3eaa6a0b8$var$options","ok","Error","statusText","catch","e","$70f690b3eaa6a0b8$var$refs","btnAddComment","document","querySelector","listCat","formWrapper","errorMessage","$70f690b3eaa6a0b8$var$handlerFormSubmit","evt","preventDefault","currentTarget","elements","data","value","options1","$70f690b3eaa6a0b8$var$addPostService","obj","insertAdjacentHTML","id","$70f690b3eaa6a0b8$var$createPostMarkup","innerHTML","finally","addEventListener"],"version":3,"file":"11-crud.1d7601c8.js.map"}