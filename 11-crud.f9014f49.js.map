{"mappings":"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","sources":["src/js/11-crud.js"],"sourcesContent":["//CRUD\n\n//R - GET\nfetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n    .then(json => {\n        console.log(json);\n        console.log('1');\n     });\n \naxios.get('https://jsonplaceholder.typicode.com/posts/1')\n.then(response => {console.log(response);  console.log('2');\n     });\n\n\n\n//C - POST\n\n// 1\nfetch('https://jsonplaceholder.typicode.com/posts', {\n  method: 'POST',\n  body: JSON.stringify({\n    title: 'foo',\n    body: 'bar',\n    userId: 1,\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n  .then(response => response.json())\n  .then(json => console.log(json));\n\n// 2\nconst options = {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    title: 'test',\n    body: 'test test',\n    userId: 1,\n  }),\n};\nfetch('https://jsonplaceholder.typicode.com/posts', options)\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  })\n  .then(json => console.log(json))\n  .catch(e => console.log(e));\n\nconst refs = {\n  btnAddComment: document.querySelector('.js-add'),\n  listCat: document.querySelector('.js-posts'),\n    formWrapper: document.querySelector('.js-form'),\n    errorMessage: document.querySelector('.js-error'),\n  \n};\n\nrefs.btnAddComment.addEventListener('click', handlerAddPost);\n\nfunction handlerAddPost() {\n  refs.formWrapper.innerHTML = `<form action=\"submit\" class=\"js-form-add\">\n    <input type=\"text\" name=\"title\">\n    <textarea name=\"body\" cols=\"30\" rows=\"10\"></textarea>\n    <button>Add post</button>\n</form>`;\n\n  const form = document.querySelector('.js-form-add');\n  form.addEventListener('submit', handlerFormSubmit);\n}\n\nfunction handlerFormSubmit(evt) {\n    evt.preventDefault();\n    const { title, body } = evt.currentTarget.elements;\n    const data = {\n        title: title.value,\n        body: body.value,\n    };\n    console.log('ðŸš€ ~ handlerFormSubmit ~ data:', data);\n\n    addPostService(data).then(obj => {\n        refs.listCat.insertAdjacentHTML('beforeend', createPostMarkup(obj))\n    })\n        .catch(() => {\n            refs.errorMessage.innerHTML = \"Can't add posts\";\n        })\n        .finally(() => {\n            refs.formWrapper.innerHTML = \"\"\n            setTimeout(()=>{refs.errorMessage.innerHTML = \"\"},2000)\n});\n}\n\nfunction createPostMarkup({ id, title, body }) {\n  return `<li data-id=\"${id}\">\n    <h2>${title}</h2>\n    <span>${body}</span>\n</li>`;\n}\n\nfunction addPostService(data) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  };\n    return fetch('https://jsonplaceholder.typicode.com/posts', options)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.statusText);\n            }\n            return response.json();\n        });\n}\n\n\n// U PUT PATCH\n\nconst options2 = {\n  method: 'PUT',\n  body: JSON.stringify({\n    id: 1,\n    title: 'test put',\n    userId: 1,\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n}\n\n\nfetch('https://jsonplaceholder.typicode.com/posts/1', options2)\n  .then((response) => response.json())\n    .then((json) => console.log(json));\n\nconst options3 = {\n  method: 'PATCH',\n  body: JSON.stringify({\n    id: 2,\n    title: 'test patch',\n    userId: 1,\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n}\n\n\n\nfetch('https://jsonplaceholder.typicode.com/posts/1', options3)\n  .then((response) => response.json())\n    .then((json) => console.log(json));\n\n\n// D DELETE\n    \nfetch('https://jsonplaceholder.typicode.com/posts/1', {\n  method: 'DELETE',\n});\n\n\n// This will return all the posts that belong to the first user\nfetch('https://jsonplaceholder.typicode.com/posts?userId=1')\n  .then((response) => response.json())\n  .then((json) => console.log(json));\n\n\n// This is equivalent to /comments?postId=1\nfetch('https://jsonplaceholder.typicode.com/posts/1/comments')\n  .then((response) => response.json())\n  .then((json) => console.log(json));"],"names":["fetch","then","response","json","console","log","axios","get","method","body","JSON","stringify","title","userId","headers","$8168caa4e6837368$var$options","ok","Error","statusText","catch","e","$8168caa4e6837368$var$refs","btnAddComment","document","querySelector","listCat","formWrapper","errorMessage","$8168caa4e6837368$var$handlerFormSubmit","evt","preventDefault","_elements","currentTarget","elements","data","value","options1","$8168caa4e6837368$var$addPostService","obj","insertAdjacentHTML","param","id","concat","$8168caa4e6837368$var$createPostMarkup","innerHTML","finally","setTimeout","addEventListener","$8168caa4e6837368$var$options2","$8168caa4e6837368$var$options3"],"version":3,"file":"11-crud.f9014f49.js.map"}