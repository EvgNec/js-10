{"mappings":"AA4DA,MAAMA,EAAO,CACXC,cAAeC,SAASC,cAAc,WACtCC,YAAaF,SAASC,cAAc,YACpCE,YAAaH,SAASC,cAAc,YACpCG,cAAeJ,SAASC,cAAc,uBAGxCH,EAAKC,cAAcM,iBAAiB,SAEpC,WAEEP,EAAKM,cAAcE,mBAAmB,YADvB,qC,IAIjBR,EAAKK,YAAYE,iBAAiB,UAElC,SAAqBE,GACnBA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,gBAalCC,eAA4BC,GAC1B,MAAMC,EAAM,uCACNC,EAAQF,EAAIG,KAAIJ,MAAMK,IAC1B,MAAMC,QAAaC,MAAM,GAAGL,IAAMG,KAClC,IAAKC,EAAKE,GACR,MAAM,IAAIC,MAAM,aAElB,OAAOH,EAAKI,MAAM,IAEdC,QAAaC,QAAQC,WAAWV,GAEtC,OADmBQ,EAAKG,QAAO,EAACC,OAACA,KAAwB,cAAXA,IAAwBX,KAAI,EAACY,MAACA,KAAWA,EAAM,I,EAlB7FC,CAJYpB,EACTqB,OAAO,WACPJ,QAAOT,GAAQA,IACfD,KAAIC,GAAQA,EAAKc,UAEjBC,MAAKd,IACJ,MAAMe,EAAWf,EAAKF,KAAI,EAACkB,QAACA,KAAaA,EAAQ,KACzCC,QAAQC,IAAI,+BAAkCH,EAAS,IAElEI,OAAMC,GAAKH,QAAQC,IAAIE,I","sources":["src/js/12-await.js"],"sourcesContent":["// async function getVapital() {\n//   // лише в випадку коли з данними працюємо всередені функції\n//   try {\n//     const URL = 'https://restcountries.com/v3.1/name/';\n//     const resp = await fetch(`${URL}Ukraine`);\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n//     const data = await resp.json();\n//     // console.log(\"🚀 ~ getVapital ~ data:\", data)\n//     return data;\n//   } catch (e) {\n//     console.log('🚀 ~ getVapital ~ e:', e);\n//   }\n// }\n// console.log('🚀 ~ getVapital():', getVapital());\n\n// async function getVapital2() {\n//     // В випадку коли з данними працюємо поза межами функції\n//   const URL = 'https://restcountries.com/v3.1/name/';\n//   const resp = await fetch(`${URL}Ukraine`);\n//   if (!resp.ok) {\n//     throw new Error(resp.statusText);\n//   }\n//   return resp.json();\n// }\n// getVapital2()\n//   .then(data => console.log(data))\n//   .catch(e => console.log(e));\n\n// async function getVapital() {\n// //   try {\n//     const URL = 'https://restcountries.com/v3.1/name/';\n//     const arr = ['Ukraine', 'France1', 'Germany'];\n\n//     const responses = arr.map(async ctr => {\n//         const resp = await fetch(`${URL}${ctr}`);\n//        console.log(\"🚀 ~ responses ~ resp:\", resp)\n//       if (!resp.ok) {\n\n//         throw new Error('Not found');\n//         // Promise.reject('Not found');\n//       }\n//       return resp.json();\n//     });\n//       const prom = await Promise.allSettled(responses)\n//       return prom;\n// //   } catch (e) {\n// //     console.log('🚀 ~ getVapital ~ e:', e);\n// //   }\n// }\n// getVapital()\n//     .then(data => {\n//         const res = data.filter(({ status }) => status === 'fulfilled').map(({value}) => value[0]);\n//         const rej = data.filter(({ status }) => status === 'rejected');\n//         console.log(res);\n//          console.log(rej);\n//     })\n//   .catch(e => console.log(e));\n\nconst refs = {\n  btnAddCountry: document.querySelector('.js-add'),\n  listCountry: document.querySelector('.js-list'),\n  formCountry: document.querySelector('.js-form'),\n  formContainer: document.querySelector('.js-form-container'),\n};\n\nrefs.btnAddCountry.addEventListener('click', handlerAddInput);\n\nfunction handlerAddInput() {\n  const markup = '<input type=\"text\" name=\"country\">';\n  refs.formContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nrefs.formCountry.addEventListener('submit', handlerForm);\n\nfunction handlerForm(e) {\n  e.preventDefault();\n  const formData = new FormData(e.currentTarget);\n  const arr = formData\n    .getAll('country')\n    .filter(item => item)\n    .map(item => item.trim());\n  getCountries(arr)\n    .then(resp => {\n      const capitals = resp.map(({capital}) => capital[0])\n              console.log(\"🚀 ~ handlerForm ~ capitals:\", capitals)\n    })    \n  .catch(e => console.log(e))\n}\n\nasync function getCountries(arr) {\n  const URL = 'https://restcountries.com/v3.1/name/';\n  const resps = arr.map(async item => {\n    const resp = await fetch(`${URL}${item}`);\n    if (!resp.ok) {\n      throw new Error('Not found');\n    }\n    return resp.json();\n  });\n  const data = await Promise.allSettled(resps)\n  const countryObj = data.filter(({status}) =>  status === 'fulfilled').map(({value}) => value[0])\n  return countryObj;\n}\n\n\nasync function getWeather(arr) {\n  const BASE_URL = 'http://api.weatherapi.com/v1';\n  const KEY = '4a0f16517e4d46ca8cd192223241209';\n\n  const resps = arr.map(async city =>\n  {\n  const param = new URLSearchParams({\n    key: KEY,\n    q: city,\n    lang: 'uk',\n  });\n  const resp = await fetch(`${BASE_URL}/current.json?${param}`)\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n      return resp.json();\n  })\n\n  const data = await Promise.allSettled(resps)\n  const obj = data.filter(({status}) =>  status === 'fulfilled').map(({value}) => value[0])\n  console.log(\"🚀 ~ getWeather ~ obj:\", obj)\n\nreturn obj\n\n}\n"],"names":["$f9095a3e74b4a42f$var$refs","btnAddCountry","document","querySelector","listCountry","formCountry","formContainer","addEventListener","insertAdjacentHTML","e1","preventDefault","formData","FormData","currentTarget","async","arr","URL","resps","map","item","resp","fetch","ok","Error","json","data","Promise","allSettled","filter","status","value","$f9095a3e74b4a42f$var$getCountries","getAll","trim","then","capitals","capital","console","log","catch","e"],"version":3,"file":"12-await.5d3ba987.js.map"}